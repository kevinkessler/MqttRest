# coding: utf-8

from __future__ import absolute_import
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class DoorCommand(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, command: str=None):
        """
        DoorCommand - a model defined in Swagger

        :param command: The command of this DoorCommand.
        :type command: str
        """
        self.swagger_types = {
            'command': str
        }

        self.attribute_map = {
            'command': 'command'
        }

        self._command = command

    @classmethod
    def from_dict(cls, dikt) -> 'DoorCommand':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DoorCommand of this DoorCommand.
        :rtype: DoorCommand
        """
        return deserialize_model(dikt, cls)

    @property
    def command(self) -> str:
        """
        Gets the command of this DoorCommand.
        Door Command

        :return: The command of this DoorCommand.
        :rtype: str
        """
        return self._command

    @command.setter
    def command(self, command: str):
        """
        Sets the command of this DoorCommand.
        Door Command

        :param command: The command of this DoorCommand.
        :type command: str
        """
        allowed_values = ["OPEN", "CLOSE"]
        if command not in allowed_values:
            raise ValueError(
                "Invalid value for `command` ({0}), must be one of {1}"
                .format(command, allowed_values)
            )

        self._command = command

